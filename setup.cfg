[bdist_wheel]
universal = true

[sdist]
formats = zip, gztar

[pylint]
python_version = 3.9

[pyright]
reportImplicitStringConcatenation = true
reportMissingParameterType = true
reportUnnecessaryTypeIgnoreComment = true
reportUnknownParameterType = true

[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = true
quiet-stdout = true
run-coverage = true

[pydocstyle]
convention = google
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
inherit = false
add-ignore = D105

[black]
line-length = 88

[isort]
profile = black

[flake8]
max-line-length = 88
doctests = True
ignore = E203, W503
exclude =  .git, .eggs, __pycache__, tests/, docs/, build/, dist/

[mypy]
exclude = (?x)(
    ^.*test_.*\.py$ |
    /setup\.py$
  ) 
# mypy-strict configs
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_decorators = true
disallow_untyped_defs = true
extra_checks = true
ignore_missing_imports = true
implicit_reexport = false
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[coverage:run]
branch = False
parallel = true

[coverage:report]
; Regexes for lines to exclude from consideration
exclude_also =
    ; Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    ; Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    ; Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    @(abc\.)?abstractmethod
    @overload
    if TYPE_CHECKING:

ignore_errors = True
omit =
    */test/*
    */.experiments/*
    */examples/*
    setup.py
    */_version.py
